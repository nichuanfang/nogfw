name: update proxy

on:
  #github actionsÂÆöÊó∂‰ªªÂä°‰∏çÁ®≥ÂÆö Êîπ‰∏∫gcpÂÆöÊó∂‰ªªÂä° ËÆ¢ÈòÖ‰∏ªÈ¢ò: often-updated
  repository_dispatch:
  # ÊâãÂä®Ëß¶Âèë
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'update proxy'

jobs:
  job1:
    name: Test craw and generate qx and clash config
    runs-on: ubuntu-latest
    # ‰ºòÂÖàÁ∫ß: Repository secrets/variables > Repository secrets/variables  ‰ºòÂÖàÁ∫ßÈ´òÁöÑËÆæÁΩÆ‰ºöË¶ÜÁõñ‰ºòÂÖàÁ∫ß‰ΩéÁöÑËÆæÁΩÆ
    environment: uat
    if: vars.NEED_TEST == 'true'
    steps:
      - uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0

      - uses: actions/cache@v2
        id: cache-ocr-models
        with:
          path: ocr_models
          key: ${{ runner.os }}-ocr
          restore-keys: |
            ${{ runner.os }}-ocr

      - name: install Chrome
        uses: browser-actions/setup-chrome@v1
        # with:
        #   chrome-version: beta

      - run: |
          chrome --version
          which chrome

      - name: install chromedriver
        uses: nanasess/setup-chromedriver@v2
        # with:
        # Optional: do not specify to match Chrome's version
        # chromedriver-version: '88.0.4324.96'

      - run: |
          chromedriver --version
          which chromedriver
          mkdir -p /opt/chromedriver/
          sudo ln -fs /usr/local/bin/chromedriver /opt/chromedriver/chromedriver

      # ÊúÄ‰Ω≥ÂÆûË∑µ yt-dlp+ffmpeg
      - name: Setup yt-dlp
        uses: AnimMouse/setup-yt-dlp@v1
        with:
          with-ffmpeg: true

      - name: prepare python environment(v3.11)
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: pip install
        run: pip install -r requirements.txt

      - name: pull
        run: |
          git checkout .
          git pull --allow-unrelated-histories

      - name: update proxy
        env:
          CRAW_NUMBER: ${{ vars.CRAW_NUMBER }}
          CRAW_SLEEP_SECONDS: ${{ vars.CRAW_SLEEP_SECONDS }}
          BULIANGLIN_CHANNEL_ID: ${{ vars.BULIANGLIN_CHANNEL_ID }}
          CHANGFENG_CHANNEL_ID: ${{ vars.CHANGFENG_CHANNEL_ID }}
        continue-on-error: true
        run: |
          python youtube.py $CRAW_NUMBER $CRAW_SLEEP_SECONDS $BULIANGLIN_CHANNEL_ID $CHANGFENG_CHANNEL_ID

      - name: execute subconverter
        continue-on-error: true
        run: |
          chmod +x ./subconverter/subconverter
          ./subconverter/subconverter -g
          python handle_dist.py

      - name: logging dist
        run: |
          echo '=====================ÂúàxÈÖçÁΩÆ: ======================================'
          cat ./dist/quanx-sub.txt
          echo '===================================================================='
          echo '===================================================================='
          echo '=====================clashÈÖçÁΩÆ: ====================================='
          cat ./dist/clash-sub.yml
          echo '===================================================================='
          echo '===================================================================='
          echo '=====================v2rayÈÖçÁΩÆ: ====================================='
          cat ./dist/v2ray-sub.txt

      - name: Push notification
        uses: shink/bark-action@v2
        continue-on-error: true
        with:
          key: ${{ secrets.BARK_KEY }} # Your secret key, it is required
          host: ${{ vars.BARK_HOST }} # Your Bark host, the default is 'https://api.day.app'
          title: Test Result
          body: Pass the qx and clash config generate test!
          sound: healthnotification
          isArchive: 1
          # url: https://yuanhaoji.com
          # automaticallyCopy: 1
          # copy: Content copied to clipboard

  job2:
    name: Deploy qx and clash config to Github Gist
    runs-on: ubuntu-latest
    # NEED_SAVEË°®Á§∫ÈúÄË¶ÅÂ∞ÜÈÖçÁΩÆÈÉ®ÁΩ≤Âà∞Github Gist
    if: vars.NEED_DEPLOY == 'true'
    environment: prod
    steps:
      - uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0

      - uses: actions/cache@v2
        id: cache-ocr-models
        with:
          path: ocr_models
          key: ${{ runner.os }}-ocr
          restore-keys: |
            ${{ runner.os }}-ocr

      - name: install Chrome
        uses: browser-actions/setup-chrome@v1

      - name: install chromedriver
        uses: nanasess/setup-chromedriver@v2

      - run: |
          mkdir -p /opt/chromedriver/
          sudo ln -fs /usr/local/bin/chromedriver /opt/chromedriver/chromedriver

      - name: Setup yt-dlp
        uses: AnimMouse/setup-yt-dlp@v1
        with:
          with-ffmpeg: true

      - name: prepare python environment(v3.11)
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: pip install
        run: pip install -r requirements.txt

      - name: pull
        run: |
          git checkout .
          git pull --allow-unrelated-histories

      - name: update proxy
        env:
          CRAW_NUMBER: ${{ vars.CRAW_NUMBER }}
          CRAW_SLEEP_SECONDS: ${{ vars.CRAW_SLEEP_SECONDS }}
          BULIANGLIN_CHANNEL_ID: ${{ vars.BULIANGLIN_CHANNEL_ID }}
          CHANGFENG_CHANNEL_ID: ${{ vars.CHANGFENG_CHANNEL_ID }}
        run: |
          python youtube.py $CRAW_NUMBER $CRAW_SLEEP_SECONDS $BULIANGLIN_CHANNEL_ID $CHANGFENG_CHANNEL_ID

      - name: execute subconverter
        run: |
          chmod +x ./subconverter/subconverter
          ./subconverter/subconverter -g
          python handle_dist.py

      - name: Deploy quanx-sub
        uses: exuanbo/actions-deploy-gist@v1.1.4
        with:
          token: ${{ secrets.GH_TOKEN }}
          gist_id: ${{ secrets.QX_SUBSCRIBE_ID }}
          file_path: dist/quanx-sub.txt
          file_type: text

      - name: Deploy clash-sub
        uses: exuanbo/actions-deploy-gist@v1.1.4
        with:
          token: ${{ secrets.GH_TOKEN }}
          gist_id: ${{ secrets.CLASH_SUBSCRIBE_ID }}
          file_path: dist/clash-sub.yml
          file_type: text

      - name: Deploy v2ray-sub
        uses: exuanbo/actions-deploy-gist@v1.1.4
        with:
          token: ${{ secrets.GH_TOKEN }}
          gist_id: ${{ secrets.V2RAY_SUBSCRIBE_ID }}
          file_path: dist/v2ray-sub.txt
          file_type: text

      - name: keep alive
        uses: Smart-Transportation/push@v1.3
        continue-on-error: true
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          branch: 'main'
          author_email: 'f18326186224@gmail.com'
          author_name: 'nichuanfang'
          message: 'üê≥ chore: keep action alive'

      # - name: Push notification
      #   uses: shink/bark-action@v2
      #   continue-on-error: true
      #   with:
      #     key: ${{ secrets.BARK_KEY }} # Your secret key, it is required
      #     host: ${{ vars.BARK_HOST }} # Your Bark host, the default is 'https://api.day.app'
      #     title: Deploy Result
      #     body: Qx and Clash config has be deployed on Github Gist
      #     sound: calypso
      #     isArchive: 1
      #     # url: https://yuanhaoji.com
      #     # automaticallyCopy: 1
      #     # copy: Content copied to clipboard
